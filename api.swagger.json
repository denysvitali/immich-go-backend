{
  "swagger": "2.0",
  "info": {
    "title": "activity.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ActivityService"
    },
    {
      "name": "AdminService"
    },
    {
      "name": "AlbumService"
    },
    {
      "name": "ApiKeyService"
    },
    {
      "name": "AssetService"
    },
    {
      "name": "AuthService"
    },
    {
      "name": "JobService"
    },
    {
      "name": "MemoryService"
    },
    {
      "name": "NotificationsService"
    },
    {
      "name": "SearchService"
    },
    {
      "name": "ServerService"
    },
    {
      "name": "SystemConfigService"
    },
    {
      "name": "TimelineService"
    },
    {
      "name": "UsersService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/activities": {
      "get": {
        "summary": "Get activities",
        "operationId": "ActivityService_GetActivities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetActivitiesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "albumId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "level",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "REACTION_LEVEL_UNSPECIFIED",
              "REACTION_LEVEL_ALBUM",
              "REACTION_LEVEL_ASSET"
            ],
            "default": "REACTION_LEVEL_UNSPECIFIED"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "REACTION_TYPE_UNSPECIFIED",
              "REACTION_TYPE_COMMENT",
              "REACTION_TYPE_LIKE"
            ],
            "default": "REACTION_TYPE_UNSPECIFIED"
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ActivityService"
        ]
      },
      "post": {
        "summary": "Create activity",
        "operationId": "ActivityService_CreateActivity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ActivityResponseDto"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateActivityRequest"
            }
          }
        ],
        "tags": [
          "ActivityService"
        ]
      }
    },
    "/api/activities/statistics": {
      "get": {
        "summary": "Get activity statistics",
        "operationId": "ActivityService_GetActivityStatistics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ActivityStatisticsResponseDto"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "albumId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ActivityService"
        ]
      }
    },
    "/api/activities/{id}": {
      "delete": {
        "summary": "Delete activity",
        "operationId": "ActivityService_DeleteActivity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ActivityService"
        ]
      }
    },
    "/api/admin/notifications": {
      "post": {
        "summary": "Send notification",
        "operationId": "AdminService_SendNotification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SendNotificationRequest"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/admin/notifications/templates/{name}": {
      "post": {
        "summary": "Render notification template",
        "operationId": "AdminService_RenderNotificationTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1TemplateResponseDto"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminServiceRenderNotificationTemplateBody"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/admin/notifications/test-email": {
      "post": {
        "summary": "Test email notification",
        "operationId": "AdminService_TestEmailNotification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1TestEmailResponseDto"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1TestEmailNotificationRequest"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/admin/users": {
      "get": {
        "summary": "Search users (admin)",
        "operationId": "AdminService_SearchUsersAdmin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SearchUsersAdminResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "withDeleted",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "AdminService"
        ]
      },
      "post": {
        "summary": "Create user (admin)",
        "operationId": "AdminService_CreateUserAdmin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UserAdminResponseDto"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateUserAdminRequest"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/admin/users/{id}": {
      "get": {
        "summary": "Get user (admin)",
        "operationId": "AdminService_GetUserAdmin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UserAdminResponseDto"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      },
      "delete": {
        "summary": "Delete user (admin)",
        "operationId": "AdminService_DeleteUserAdmin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UserAdminResponseDto"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "AdminService"
        ]
      },
      "put": {
        "summary": "Update user (admin)",
        "operationId": "AdminService_UpdateUserAdmin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UserAdminResponseDto"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminServiceUpdateUserAdminBody"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/admin/users/{id}/preferences": {
      "get": {
        "summary": "Get user preferences (admin)",
        "operationId": "AdminService_GetUserPreferencesAdmin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UserPreferencesResponseDto"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      },
      "put": {
        "summary": "Update user preferences (admin)",
        "operationId": "AdminService_UpdateUserPreferencesAdmin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UserPreferencesResponseDto"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminServiceUpdateUserPreferencesAdminBody"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/admin/users/{id}/restore": {
      "post": {
        "summary": "Restore user (admin)",
        "operationId": "AdminService_RestoreUserAdmin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UserAdminResponseDto"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminServiceRestoreUserAdminBody"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/admin/users/{id}/statistics": {
      "get": {
        "summary": "Get user statistics (admin)",
        "operationId": "AdminService_GetUserStatisticsAdmin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UserStatisticsResponseDto"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/api/albums": {
      "get": {
        "summary": "Get all albums",
        "operationId": "AlbumService_GetAllAlbums",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAllAlbumsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "assetId",
            "description": "Only returns albums that contain the asset",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "shared",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "AlbumService"
        ]
      },
      "post": {
        "summary": "Create a new album",
        "operationId": "AlbumService_CreateAlbum",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Album"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAlbumRequest"
            }
          }
        ],
        "tags": [
          "AlbumService"
        ]
      }
    },
    "/api/albums/statistics": {
      "get": {
        "summary": "Get album statistics",
        "operationId": "AlbumService_GetAlbumStatistics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AlbumStatisticsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AlbumService"
        ]
      }
    },
    "/api/albums/{id}": {
      "get": {
        "summary": "Get album information",
        "operationId": "AlbumService_GetAlbumInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Album"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "description": "For shared albums",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "withoutAssets",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "AlbumService"
        ]
      },
      "delete": {
        "summary": "Delete an album",
        "operationId": "AlbumService_DeleteAlbum",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AlbumService"
        ]
      },
      "patch": {
        "summary": "Update album information",
        "operationId": "AlbumService_UpdateAlbumInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Album"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlbumServiceUpdateAlbumInfoBody"
            }
          }
        ],
        "tags": [
          "AlbumService"
        ]
      }
    },
    "/api/albums/{id}/assets": {
      "delete": {
        "summary": "Remove asset from album",
        "operationId": "AlbumService_RemoveAssetFromAlbum",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RemoveAssetFromAlbumResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlbumServiceRemoveAssetFromAlbumBody"
            }
          }
        ],
        "tags": [
          "AlbumService"
        ]
      },
      "put": {
        "summary": "Add assets to album",
        "operationId": "AlbumService_AddAssetsToAlbum",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AddAssetsToAlbumResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlbumServiceAddAssetsToAlbumBody"
            }
          }
        ],
        "tags": [
          "AlbumService"
        ]
      }
    },
    "/api/albums/{id}/user/{userId}": {
      "delete": {
        "summary": "Remove user from album",
        "operationId": "AlbumService_RemoveUserFromAlbum",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AlbumService"
        ]
      },
      "put": {
        "summary": "Update album user",
        "operationId": "AlbumService_UpdateAlbumUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlbumServiceUpdateAlbumUserBody"
            }
          }
        ],
        "tags": [
          "AlbumService"
        ]
      }
    },
    "/api/albums/{id}/users": {
      "put": {
        "summary": "Add users to album",
        "operationId": "AlbumService_AddUsersToAlbum",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Album"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlbumServiceAddUsersToAlbumBody"
            }
          }
        ],
        "tags": [
          "AlbumService"
        ]
      }
    },
    "/api/api-keys": {
      "get": {
        "summary": "Get all API keys",
        "operationId": "ApiKeyService_GetApiKeys",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetApiKeysResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ApiKeyService"
        ]
      },
      "post": {
        "summary": "Create API key",
        "operationId": "ApiKeyService_CreateApiKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateApiKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateApiKeyRequest"
            }
          }
        ],
        "tags": [
          "ApiKeyService"
        ]
      }
    },
    "/api/api-keys/{id}": {
      "get": {
        "summary": "Get API key by ID",
        "operationId": "ApiKeyService_GetApiKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ApiKeyResponseDto"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ApiKeyService"
        ]
      },
      "delete": {
        "summary": "Delete API key",
        "operationId": "ApiKeyService_DeleteApiKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ApiKeyService"
        ]
      },
      "put": {
        "summary": "Update API key",
        "operationId": "ApiKeyService_UpdateApiKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ApiKeyResponseDto"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiKeyServiceUpdateApiKeyBody"
            }
          }
        ],
        "tags": [
          "ApiKeyService"
        ]
      }
    },
    "/api/assets": {
      "get": {
        "summary": "Get all assets for a user",
        "operationId": "AssetService_GetAssets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAssetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASSET_TYPE_UNSPECIFIED",
              "ASSET_TYPE_IMAGE",
              "ASSET_TYPE_VIDEO"
            ],
            "default": "ASSET_TYPE_UNSPECIFIED"
          },
          {
            "name": "isFavorite",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isArchived",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isTrashed",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "city",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "make",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "takenAfter",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "takenBefore",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "originalPath",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "libraryId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "AssetService"
        ]
      },
      "delete": {
        "summary": "Delete assets",
        "operationId": "AssetService_DeleteAssets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteAssetsRequest"
            }
          }
        ],
        "tags": [
          "AssetService"
        ]
      },
      "post": {
        "summary": "Upload a new asset",
        "operationId": "AssetService_UploadAsset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Asset"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UploadAssetRequest"
            }
          }
        ],
        "tags": [
          "AssetService"
        ]
      },
      "put": {
        "summary": "Bulk update assets",
        "operationId": "AssetService_UpdateAssets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateAssetsRequest"
            }
          }
        ],
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/bulk-upload-check": {
      "post": {
        "summary": "Bulk upload check",
        "operationId": "AssetService_CheckBulkUpload",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CheckBulkUploadResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CheckBulkUploadRequest"
            }
          }
        ],
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/device/{deviceId}": {
      "get": {
        "summary": "Get all user assets by device ID",
        "operationId": "AssetService_GetAllUserAssetsByDeviceId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAllUserAssetsByDeviceIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/exist": {
      "post": {
        "summary": "Check if assets exist",
        "operationId": "AssetService_CheckExistingAssets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CheckExistingAssetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CheckExistingAssetsRequest"
            }
          }
        ],
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/jobs": {
      "post": {
        "summary": "Run asset jobs",
        "operationId": "AssetService_RunAssetJobs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RunAssetJobsRequest"
            }
          }
        ],
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/random": {
      "get": {
        "summary": "Get random assets (deprecated)",
        "operationId": "AssetService_GetRandom",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRandomResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/statistics": {
      "get": {
        "summary": "Get asset statistics",
        "operationId": "AssetService_GetAssetStatistics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AssetStatisticsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/{assetId}": {
      "get": {
        "summary": "Get a specific asset by ID",
        "operationId": "AssetService_GetAsset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Asset"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AssetService"
        ]
      },
      "put": {
        "summary": "Update an asset",
        "operationId": "AssetService_UpdateAsset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Asset"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssetServiceUpdateAssetBody"
            }
          }
        ],
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/{assetId}/original": {
      "get": {
        "summary": "Download asset original",
        "operationId": "AssetService_DownloadAsset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DownloadAssetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AssetService"
        ]
      },
      "put": {
        "summary": "Replace asset",
        "operationId": "AssetService_ReplaceAsset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Asset"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssetServiceReplaceAssetBody"
            }
          }
        ],
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/{assetId}/thumbnail": {
      "get": {
        "summary": "Get asset thumbnail",
        "operationId": "AssetService_GetAssetThumbnail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAssetThumbnailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "IMAGE_FORMAT_UNSPECIFIED",
              "IMAGE_FORMAT_JPEG",
              "IMAGE_FORMAT_WEBP"
            ],
            "default": "IMAGE_FORMAT_UNSPECIFIED"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/assets/{assetId}/video/playback": {
      "get": {
        "summary": "Play asset video",
        "operationId": "AssetService_PlayAssetVideo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PlayAssetVideoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AssetService"
        ]
      }
    },
    "/api/auth/admin-sign-up": {
      "post": {
        "summary": "Admin sign up",
        "operationId": "AuthService_AdminSignUp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AdminSignUpRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/api/auth/change-password": {
      "post": {
        "summary": "Change password",
        "operationId": "AuthService_ChangePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ChangePasswordRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Login with email and password",
        "operationId": "AuthService_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LoginRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/api/auth/logout": {
      "post": {
        "summary": "Logout",
        "operationId": "AuthService_Logout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LogoutResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/api/auth/validateToken": {
      "post": {
        "summary": "Validate token",
        "operationId": "AuthService_ValidateToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ValidateTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/api/jobs": {
      "get": {
        "summary": "Get all job statuses",
        "operationId": "JobService_GetAllJobStatuses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AllJobStatusResponseDto"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "JobService"
        ]
      },
      "post": {
        "summary": "Clear job",
        "operationId": "JobService_ClearJob",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1JobStatusDto"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ClearJobRequest"
            }
          }
        ],
        "tags": [
          "JobService"
        ]
      }
    },
    "/api/jobs/{id}": {
      "put": {
        "summary": "Send job command",
        "operationId": "JobService_SendJobCommand",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1JobStatusDto"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Job name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "command",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1JobCommandDto"
            }
          }
        ],
        "tags": [
          "JobService"
        ]
      }
    },
    "/api/memories": {
      "get": {
        "summary": "Search memories\nTODO: Find a better return type as SearchMemoriesResponse is not directly an array as Immich expects it to be.\nListValue looks promising, but it's not really typed. Alternatively we can try to create a custom marshaler:\nhttps://grpc-ecosystem.github.io/grpc-gateway/docs/mapping/custom_marshalers/",
        "operationId": "MemoryService_SearchMemories",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SearchMemoriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "forDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "isSaved",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isTrashed",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "MEMORY_TYPE_UNSPECIFIED",
              "MEMORY_TYPE_ON_THIS_DAY"
            ],
            "default": "MEMORY_TYPE_UNSPECIFIED"
          }
        ],
        "tags": [
          "MemoryService"
        ]
      },
      "post": {
        "summary": "Create a new memory",
        "operationId": "MemoryService_CreateMemory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Memory"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateMemoryRequest"
            }
          }
        ],
        "tags": [
          "MemoryService"
        ]
      }
    },
    "/api/memories/{id}": {
      "get": {
        "summary": "Get memory by ID",
        "operationId": "MemoryService_GetMemory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Memory"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "MemoryService"
        ]
      },
      "delete": {
        "summary": "Delete memory",
        "operationId": "MemoryService_DeleteMemory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "MemoryService"
        ]
      },
      "put": {
        "summary": "Update memory",
        "operationId": "MemoryService_UpdateMemory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Memory"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MemoryServiceUpdateMemoryBody"
            }
          }
        ],
        "tags": [
          "MemoryService"
        ]
      }
    },
    "/api/memories/{id}/assets": {
      "delete": {
        "summary": "Remove assets from memory",
        "operationId": "MemoryService_RemoveMemoryAssets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BulkIdResponseList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MemoryServiceRemoveMemoryAssetsBody"
            }
          }
        ],
        "tags": [
          "MemoryService"
        ]
      },
      "put": {
        "summary": "Add assets to memory",
        "operationId": "MemoryService_AddMemoryAssets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1BulkIdResponseList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MemoryServiceAddMemoryAssetsBody"
            }
          }
        ],
        "tags": [
          "MemoryService"
        ]
      }
    },
    "/api/notifications": {
      "get": {
        "summary": "Get notifications",
        "operationId": "NotificationsService_GetNotifications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetNotificationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "level",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NOTIFICATION_LEVEL_UNSPECIFIED",
              "NOTIFICATION_LEVEL_SUCCESS",
              "NOTIFICATION_LEVEL_ERROR",
              "NOTIFICATION_LEVEL_WARNING",
              "NOTIFICATION_LEVEL_INFO"
            ],
            "default": "NOTIFICATION_LEVEL_UNSPECIFIED"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NOTIFICATION_TYPE_UNSPECIFIED",
              "NOTIFICATION_TYPE_JOB_FAILED",
              "NOTIFICATION_TYPE_BACKUP_FAILED",
              "NOTIFICATION_TYPE_SYSTEM_MESSAGE",
              "NOTIFICATION_TYPE_CUSTOM"
            ],
            "default": "NOTIFICATION_TYPE_UNSPECIFIED"
          },
          {
            "name": "unread",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "NotificationsService"
        ]
      },
      "delete": {
        "summary": "Delete multiple notifications",
        "operationId": "NotificationsService_DeleteNotifications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteNotificationsRequest"
            }
          }
        ],
        "tags": [
          "NotificationsService"
        ]
      },
      "put": {
        "summary": "Update multiple notifications",
        "operationId": "NotificationsService_UpdateNotifications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateNotificationsRequest"
            }
          }
        ],
        "tags": [
          "NotificationsService"
        ]
      }
    },
    "/api/notifications/{id}": {
      "get": {
        "summary": "Get single notification",
        "operationId": "NotificationsService_GetNotification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NotificationDto"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NotificationsService"
        ]
      },
      "delete": {
        "summary": "Delete notification",
        "operationId": "NotificationsService_DeleteNotification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NotificationsService"
        ]
      },
      "put": {
        "summary": "Update notification",
        "operationId": "NotificationsService_UpdateNotification",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1NotificationDto"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationsServiceUpdateNotificationBody"
            }
          }
        ],
        "tags": [
          "NotificationsService"
        ]
      }
    },
    "/api/search": {
      "get": {
        "summary": "Search",
        "operationId": "SearchService_Search",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clip",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASSET_TYPE_UNSPECIFIED",
              "ASSET_TYPE_IMAGE",
              "ASSET_TYPE_VIDEO"
            ],
            "default": "ASSET_TYPE_UNSPECIFIED"
          },
          {
            "name": "isFavorite",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isArchived",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "SearchService"
        ]
      }
    },
    "/api/search/cities": {
      "get": {
        "summary": "Search cities",
        "operationId": "SearchService_SearchCities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SearchCitiesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SearchService"
        ]
      }
    },
    "/api/search/explore": {
      "get": {
        "summary": "Search explore",
        "operationId": "SearchService_SearchExplore",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SearchExploreResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "SearchService"
        ]
      }
    },
    "/api/search/metadata": {
      "post": {
        "summary": "Search metadata",
        "operationId": "SearchService_SearchMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SearchResponseDto"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SearchMetadataRequest"
            }
          }
        ],
        "tags": [
          "SearchService"
        ]
      }
    },
    "/api/search/person": {
      "get": {
        "summary": "Search person",
        "operationId": "SearchService_SearchPerson",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SearchPersonResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "withHidden",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "SearchService"
        ]
      }
    },
    "/api/search/places": {
      "get": {
        "summary": "Search places",
        "operationId": "SearchService_SearchPlaces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SearchPlacesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SearchService"
        ]
      }
    },
    "/api/search/smart": {
      "post": {
        "summary": "Search smart",
        "operationId": "SearchService_SearchSmart",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SearchSmartResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SearchSmartRequest"
            }
          }
        ],
        "tags": [
          "SearchService"
        ]
      }
    },
    "/api/search/suggestions": {
      "get": {
        "summary": "Get search suggestions",
        "operationId": "SearchService_GetSearchSuggestions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSearchSuggestionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "make",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASSET_TYPE_UNSPECIFIED",
              "ASSET_TYPE_IMAGE",
              "ASSET_TYPE_VIDEO"
            ],
            "default": "ASSET_TYPE_UNSPECIFIED"
          }
        ],
        "tags": [
          "SearchService"
        ]
      }
    },
    "/api/server/about": {
      "get": {
        "summary": "Get server about information",
        "operationId": "ServerService_GetAboutInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ServerAboutResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ServerService"
        ]
      }
    },
    "/api/server/config": {
      "get": {
        "summary": "Get server configuration",
        "operationId": "ServerService_GetServerConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ServerConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ServerService"
        ]
      }
    },
    "/api/server/features": {
      "get": {
        "summary": "Get server features",
        "operationId": "ServerService_GetServerFeatures",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ServerFeaturesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ServerService"
        ]
      }
    },
    "/api/server/license": {
      "get": {
        "summary": "Get server license",
        "operationId": "ServerService_GetServerLicense",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LicenseResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ServerService"
        ]
      },
      "delete": {
        "summary": "Delete server license",
        "operationId": "ServerService_DeleteServerLicense",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ServerService"
        ]
      },
      "put": {
        "summary": "Set server license",
        "operationId": "ServerService_SetServerLicense",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LicenseResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LicenseKeyRequest"
            }
          }
        ],
        "tags": [
          "ServerService"
        ]
      }
    },
    "/api/server/media-types": {
      "get": {
        "summary": "Get supported media types",
        "operationId": "ServerService_GetSupportedMediaTypes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ServerMediaTypesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ServerService"
        ]
      }
    },
    "/api/server/ping": {
      "get": {
        "summary": "Ping server",
        "operationId": "ServerService_PingServer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ServerPingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ServerService"
        ]
      }
    },
    "/api/server/statistics": {
      "get": {
        "summary": "Get server statistics",
        "operationId": "ServerService_GetServerStatistics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ServerStatsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ServerService"
        ]
      }
    },
    "/api/server/storage": {
      "get": {
        "summary": "Get server storage information",
        "operationId": "ServerService_GetStorage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ServerStorageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ServerService"
        ]
      }
    },
    "/api/server/theme": {
      "get": {
        "summary": "Get server theme",
        "operationId": "ServerService_GetTheme",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ServerThemeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ServerService"
        ]
      }
    },
    "/api/server/version": {
      "get": {
        "summary": "Get server version",
        "operationId": "ServerService_GetServerVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ServerVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ServerService"
        ]
      }
    },
    "/api/server/version-history": {
      "get": {
        "summary": "Get version history",
        "operationId": "ServerService_GetVersionHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ServerVersionHistoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ServerService"
        ]
      }
    },
    "/api/system-config": {
      "get": {
        "summary": "Get system configuration",
        "operationId": "SystemConfigService_GetSystemConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SystemConfigDto"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "SystemConfigService"
        ]
      },
      "put": {
        "summary": "Update system configuration",
        "operationId": "SystemConfigService_UpdateSystemConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SystemConfigDto"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1SystemConfigDto"
            }
          }
        ],
        "tags": [
          "SystemConfigService"
        ]
      }
    },
    "/api/system-config/defaults": {
      "get": {
        "summary": "Get default system configuration",
        "operationId": "SystemConfigService_GetSystemConfigDefaults",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SystemConfigDto"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "SystemConfigService"
        ]
      }
    },
    "/api/system-config/storage-template-options": {
      "post": {
        "summary": "Get system configuration template",
        "operationId": "SystemConfigService_GetSystemConfigTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SystemConfigTemplateStorageOptionDto"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetSystemConfigTemplateRequest"
            }
          }
        ],
        "tags": [
          "SystemConfigService"
        ]
      }
    },
    "/api/timeline/bucket": {
      "get": {
        "summary": "Get time bucket of assets",
        "operationId": "TimelineService_GetTimeBucket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1TimeBucketAssetResponseDto"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "albumId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "isFavorite",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isTrashed",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "default": "ASC"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "personId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tagId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeBucket",
            "description": "required",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "visibility",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASSET_VISIBILITY_UNSPECIFIED",
              "ASSET_VISIBILITY_PUBLIC",
              "ASSET_VISIBILITY_PRIVATE"
            ],
            "default": "ASSET_VISIBILITY_UNSPECIFIED"
          },
          {
            "name": "withPartners",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "withStacked",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "TimelineService"
        ]
      }
    },
    "/api/timeline/buckets": {
      "get": {
        "summary": "Get time buckets",
        "operationId": "TimelineService_GetTimeBuckets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetTimeBucketsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "albumId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "isFavorite",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isTrashed",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "default": "ASC"
          },
          {
            "name": "personId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tagId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "visibility",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ASSET_VISIBILITY_UNSPECIFIED",
              "ASSET_VISIBILITY_PUBLIC",
              "ASSET_VISIBILITY_PRIVATE"
            ],
            "default": "ASSET_VISIBILITY_UNSPECIFIED"
          },
          {
            "name": "withPartners",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "withStacked",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "TimelineService"
        ]
      }
    },
    "/api/users/me": {
      "get": {
        "summary": "Get current user information",
        "operationId": "UsersService_GetMyUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UserAdminResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsersService"
        ]
      },
      "put": {
        "summary": "Update current user information",
        "operationId": "UsersService_UpdateMyUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UserAdminResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UserUpdateMeRequest"
            }
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/api/users/me/license": {
      "get": {
        "summary": "Get user license information",
        "operationId": "UsersService_GetUserLicense",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UserLicenseResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsersService"
        ]
      },
      "delete": {
        "summary": "Delete user license",
        "operationId": "UsersService_DeleteUserLicense",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsersService"
        ]
      },
      "put": {
        "summary": "Set user license",
        "operationId": "UsersService_SetUserLicense",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UserLicenseResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UserLicenseKeyRequest"
            }
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/api/users/me/preferences": {
      "get": {
        "summary": "Get user preferences",
        "operationId": "UsersService_GetMyPreferences",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UserPreferencesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsersService"
        ]
      },
      "put": {
        "summary": "Update user preferences",
        "operationId": "UsersService_UpdateMyPreferences",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UserPreferencesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UserPreferencesUpdateRequest"
            }
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/api/users/profile-image": {
      "delete": {
        "summary": "Delete profile image",
        "operationId": "UsersService_DeleteProfileImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsersService"
        ]
      },
      "post": {
        "summary": "Create profile image",
        "operationId": "UsersService_CreateProfileImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateProfileImageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateProfileImageRequest"
            }
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/api/users/{userId}": {
      "get": {
        "summary": "Get user by ID",
        "operationId": "UsersService_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/api/users/{userId}/profile-image": {
      "get": {
        "summary": "Get profile image by user ID",
        "operationId": "UsersService_GetProfileImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetProfileImageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    }
  },
  "definitions": {
    "AdminServiceRenderNotificationTemplateBody": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "Render notification template request"
    },
    "AdminServiceRestoreUserAdminBody": {
      "type": "object",
      "title": "Restore user admin request"
    },
    "AdminServiceUpdateUserAdminBody": {
      "type": "object",
      "properties": {
        "avatarColor": {
          "$ref": "#/definitions/v1UserAvatarColor"
        },
        "email": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "quotaSizeInBytes": {
          "type": "string",
          "format": "int64"
        },
        "shouldChangePassword": {
          "type": "boolean"
        },
        "storageLabel": {
          "type": "string"
        }
      },
      "title": "Update user admin request"
    },
    "AdminServiceUpdateUserPreferencesAdminBody": {
      "type": "object",
      "properties": {
        "preferences": {
          "$ref": "#/definitions/v1UserPreferencesResponseDto"
        }
      },
      "title": "Update user preferences admin request"
    },
    "AlbumServiceAddAssetsToAlbumBody": {
      "type": "object",
      "properties": {
        "assetIds": {
          "$ref": "#/definitions/v1BulkIds"
        },
        "key": {
          "type": "string",
          "title": "For shared albums"
        }
      },
      "title": "Add assets to album request"
    },
    "AlbumServiceAddUsersToAlbumBody": {
      "type": "object",
      "properties": {
        "sharedUserIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Add users to album request"
    },
    "AlbumServiceRemoveAssetFromAlbumBody": {
      "type": "object",
      "properties": {
        "assetIds": {
          "$ref": "#/definitions/v1BulkIds"
        }
      },
      "title": "Remove asset from album request"
    },
    "AlbumServiceUpdateAlbumInfoBody": {
      "type": "object",
      "properties": {
        "albumName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "albumThumbnailAssetId": {
          "type": "string"
        },
        "isActivityEnabled": {
          "type": "boolean"
        },
        "updateMask": {
          "type": "string"
        }
      },
      "title": "Update album info request"
    },
    "AlbumServiceUpdateAlbumUserBody": {
      "type": "object",
      "properties": {
        "role": {
          "$ref": "#/definitions/v1AlbumUserRole"
        }
      },
      "title": "Update album user request"
    },
    "ApiKeyServiceUpdateApiKeyBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "title": "Update API key request"
    },
    "AssetServiceReplaceAssetBody": {
      "type": "object",
      "properties": {
        "assetData": {
          "$ref": "#/definitions/v1CreateAssetRequest"
        }
      },
      "title": "Replace asset request"
    },
    "AssetServiceUpdateAssetBody": {
      "type": "object",
      "properties": {
        "isFavorite": {
          "type": "boolean"
        },
        "isArchived": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "dateTimeOriginal": {
          "type": "string",
          "format": "date-time"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "updateMask": {
          "type": "string"
        }
      },
      "title": "Update asset request"
    },
    "MemoryServiceAddMemoryAssetsBody": {
      "type": "object",
      "properties": {
        "bulkIds": {
          "$ref": "#/definitions/v1BulkIds"
        }
      },
      "title": "Add memory assets request"
    },
    "MemoryServiceRemoveMemoryAssetsBody": {
      "type": "object",
      "properties": {
        "bulkIds": {
          "$ref": "#/definitions/v1BulkIds"
        }
      },
      "title": "Remove memory assets request"
    },
    "MemoryServiceUpdateMemoryBody": {
      "type": "object",
      "properties": {
        "isSaved": {
          "type": "boolean"
        },
        "memoryAt": {
          "type": "string",
          "format": "date-time"
        },
        "seenAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Update memory request"
    },
    "NotificationsServiceUpdateNotificationBody": {
      "type": "object",
      "properties": {
        "readAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Update notification request"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1ActivityResponseDto": {
      "type": "object",
      "properties": {
        "assetId": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1ReactionType"
        },
        "user": {
          "$ref": "#/definitions/v1User"
        }
      },
      "title": "Activity response DTO"
    },
    "v1ActivityStatisticsResponseDto": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Activity statistics response DTO"
    },
    "v1AddAssetsToAlbumResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BulkIdResponse"
          }
        }
      },
      "title": "Add assets to album response"
    },
    "v1AdminSignUpRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "Admin sign up request"
    },
    "v1Album": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "albumName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "ownerId": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/v1User"
        },
        "albumThumbnailAssetId": {
          "type": "string"
        },
        "isActivityEnabled": {
          "type": "boolean"
        },
        "assets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Asset"
          }
        },
        "assetCount": {
          "type": "integer",
          "format": "int32"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "sharedUsers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AlbumUser"
          }
        },
        "hasSharedLink": {
          "type": "boolean"
        }
      },
      "title": "Album message"
    },
    "v1AlbumResponseDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "albumName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "albumThumbnailAssetId": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/v1User"
        },
        "assetCount": {
          "type": "integer",
          "format": "int32"
        },
        "isActivityEnabled": {
          "type": "boolean"
        },
        "albumUsers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AlbumUserResponseDto"
          }
        },
        "hasSharedLink": {
          "type": "boolean"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "assets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AssetResponseDto"
          }
        }
      },
      "title": "Album response DTO (simplified for search)"
    },
    "v1AlbumStatisticsResponse": {
      "type": "object",
      "properties": {
        "owned": {
          "type": "integer",
          "format": "int32"
        },
        "shared": {
          "type": "integer",
          "format": "int32"
        },
        "notShared": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Album statistics response"
    },
    "v1AlbumUser": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/v1User"
        },
        "role": {
          "$ref": "#/definitions/v1AlbumUserRole"
        }
      },
      "title": "Album user sharing information"
    },
    "v1AlbumUserResponseDto": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        },
        "role": {
          "type": "string"
        }
      },
      "title": "Album user response DTO"
    },
    "v1AlbumUserRole": {
      "type": "string",
      "enum": [
        "ALBUM_USER_ROLE_UNSPECIFIED",
        "ALBUM_USER_ROLE_VIEWER",
        "ALBUM_USER_ROLE_EDITOR"
      ],
      "default": "ALBUM_USER_ROLE_UNSPECIFIED",
      "title": "Album user roles"
    },
    "v1AllJobStatusResponseDto": {
      "type": "object",
      "properties": {
        "backgroundTask": {
          "$ref": "#/definitions/v1JobStatusDto"
        },
        "clipEncoding": {
          "$ref": "#/definitions/v1JobStatusDto"
        },
        "duplicateDetection": {
          "$ref": "#/definitions/v1JobStatusDto"
        },
        "faceDetection": {
          "$ref": "#/definitions/v1JobStatusDto"
        },
        "facialRecognition": {
          "$ref": "#/definitions/v1JobStatusDto"
        },
        "library": {
          "$ref": "#/definitions/v1JobStatusDto"
        },
        "metadataExtraction": {
          "$ref": "#/definitions/v1JobStatusDto"
        },
        "migration": {
          "$ref": "#/definitions/v1JobStatusDto"
        },
        "notification": {
          "$ref": "#/definitions/v1JobStatusDto"
        },
        "search": {
          "$ref": "#/definitions/v1JobStatusDto"
        },
        "sidecar": {
          "$ref": "#/definitions/v1JobStatusDto"
        },
        "smartSearch": {
          "$ref": "#/definitions/v1JobStatusDto"
        },
        "storageTemplateMigration": {
          "$ref": "#/definitions/v1JobStatusDto"
        },
        "thumbnailGeneration": {
          "$ref": "#/definitions/v1JobStatusDto"
        },
        "videoConversion": {
          "$ref": "#/definitions/v1JobStatusDto"
        }
      },
      "title": "All job status response DTO"
    },
    "v1ApiKeyResponseDto": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "API Key response DTO"
    },
    "v1Asset": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "deviceAssetId": {
          "type": "string"
        },
        "ownerId": {
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1AssetType"
        },
        "originalPath": {
          "type": "string"
        },
        "originalFileName": {
          "type": "string"
        },
        "resizePath": {
          "type": "string"
        },
        "webpPath": {
          "type": "string"
        },
        "thumbhashPath": {
          "type": "string"
        },
        "encodedVideoPath": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "isFavorite": {
          "type": "boolean"
        },
        "isArchived": {
          "type": "boolean"
        },
        "isTrashed": {
          "type": "boolean"
        },
        "duration": {
          "type": "string"
        },
        "exifInfo": {
          "$ref": "#/definitions/v1ExifInfo"
        },
        "smartInfo": {
          "$ref": "#/definitions/v1SmartInfo"
        },
        "livePhotoVideoId": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "people": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "checksum": {
          "type": "string"
        },
        "stackParentId": {
          "type": "string"
        },
        "stack": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Asset"
          }
        }
      },
      "title": "Asset message"
    },
    "v1AssetFaceResponseDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "boundingBox": {
          "$ref": "#/definitions/v1BoundingBoxDto"
        },
        "imageHeight": {
          "type": "string"
        },
        "imageWidth": {
          "type": "string"
        },
        "person": {
          "$ref": "#/definitions/v1PersonResponseDto"
        }
      },
      "title": "Asset face response DTO"
    },
    "v1AssetJobName": {
      "type": "string",
      "enum": [
        "ASSET_JOB_NAME_UNSPECIFIED",
        "ASSET_JOB_NAME_THUMBNAIL_GENERATION",
        "ASSET_JOB_NAME_METADATA_EXTRACTION",
        "ASSET_JOB_NAME_VIDEO_CONVERSION",
        "ASSET_JOB_NAME_DUPLICATE_DETECTION"
      ],
      "default": "ASSET_JOB_NAME_UNSPECIFIED",
      "title": "Job names for asset processing"
    },
    "v1AssetOrder": {
      "type": "string",
      "enum": [
        "ASC",
        "DESC"
      ],
      "default": "ASC"
    },
    "v1AssetResponseDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "deviceAssetId": {
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1AssetType"
        },
        "originalPath": {
          "type": "string"
        },
        "originalFileName": {
          "type": "string"
        },
        "isFavorite": {
          "type": "boolean"
        },
        "isArchived": {
          "type": "boolean"
        },
        "isTrashed": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "fileCreatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "fileModifiedAt": {
          "type": "string",
          "format": "date-time"
        },
        "exifInfo": {
          "$ref": "#/definitions/v1ExifInfo"
        },
        "smartInfo": {
          "$ref": "#/definitions/v1SmartInfo"
        },
        "checksum": {
          "type": "string"
        },
        "duration": {
          "type": "string"
        },
        "isExternal": {
          "type": "boolean"
        },
        "isOffline": {
          "type": "boolean"
        },
        "isReadOnly": {
          "type": "boolean"
        },
        "libraryId": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/v1User"
        },
        "people": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PersonWithFacesResponseDto"
          }
        },
        "stackId": {
          "type": "string"
        },
        "stack": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AssetResponseDto"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TagResponseDto"
          }
        },
        "thumbhash": {
          "type": "string"
        },
        "hasMetadata": {
          "type": "boolean"
        },
        "duplicateId": {
          "type": "string"
        }
      },
      "title": "Asset response DTO (simplified for search)"
    },
    "v1AssetStatisticsResponse": {
      "type": "object",
      "properties": {
        "images": {
          "type": "integer",
          "format": "int32"
        },
        "videos": {
          "type": "integer",
          "format": "int32"
        },
        "total": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Asset statistics response"
    },
    "v1AssetType": {
      "type": "string",
      "enum": [
        "ASSET_TYPE_UNSPECIFIED",
        "ASSET_TYPE_IMAGE",
        "ASSET_TYPE_VIDEO"
      ],
      "default": "ASSET_TYPE_UNSPECIFIED",
      "title": "Common enums and types"
    },
    "v1AssetVisibility": {
      "type": "string",
      "enum": [
        "ASSET_VISIBILITY_UNSPECIFIED",
        "ASSET_VISIBILITY_PUBLIC",
        "ASSET_VISIBILITY_PRIVATE"
      ],
      "default": "ASSET_VISIBILITY_UNSPECIFIED",
      "title": "Asset visibility enum"
    },
    "v1AvatarResponse": {
      "type": "object",
      "properties": {
        "color": {
          "$ref": "#/definitions/v1UserAvatarColor"
        }
      },
      "title": "Avatar response"
    },
    "v1AvatarUpdate": {
      "type": "object",
      "properties": {
        "color": {
          "$ref": "#/definitions/v1UserAvatarColor"
        }
      },
      "title": "Update sub-messages for preferences"
    },
    "v1BoundingBoxDto": {
      "type": "object",
      "properties": {
        "x1": {
          "type": "integer",
          "format": "int32"
        },
        "y1": {
          "type": "integer",
          "format": "int32"
        },
        "x2": {
          "type": "integer",
          "format": "int32"
        },
        "y2": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Bounding box DTO"
    },
    "v1BulkIdResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "error": {
          "type": "string"
        }
      },
      "title": "Bulk ID response"
    },
    "v1BulkIdResponseList": {
      "type": "object",
      "properties": {
        "responses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BulkIdResponse"
          }
        }
      },
      "title": "Bulk ID response list"
    },
    "v1BulkIds": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Bulk IDs for asset operations"
    },
    "v1ChangePasswordRequest": {
      "type": "object",
      "properties": {
        "currentPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      },
      "title": "Change password request"
    },
    "v1CheckBulkUploadRequest": {
      "type": "object",
      "properties": {
        "assets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1CreateAssetRequest"
          }
        }
      },
      "title": "Bulk upload check request"
    },
    "v1CheckBulkUploadResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Asset"
          }
        }
      },
      "title": "Bulk upload check response"
    },
    "v1CheckExistingAssetsRequest": {
      "type": "object",
      "properties": {
        "deviceAssetIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deviceId": {
          "type": "string"
        }
      },
      "title": "Check existing assets request"
    },
    "v1CheckExistingAssetsResponse": {
      "type": "object",
      "properties": {
        "existingIds": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        }
      },
      "title": "Check existing assets response"
    },
    "v1ClearJobRequest": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/v1JobName"
        },
        "command": {
          "$ref": "#/definitions/v1JobCommand"
        },
        "force": {
          "type": "boolean"
        }
      },
      "title": "Clear job request"
    },
    "v1CreateActivityRequest": {
      "type": "object",
      "properties": {
        "albumId": {
          "type": "string"
        },
        "assetId": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1ReactionType"
        }
      },
      "title": "Create activity request"
    },
    "v1CreateAlbumRequest": {
      "type": "object",
      "properties": {
        "albumName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "assetIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sharedWithUserIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Create album request"
    },
    "v1CreateApiKeyRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "title": "Create API key request"
    },
    "v1CreateApiKeyResponse": {
      "type": "object",
      "properties": {
        "apiKey": {
          "$ref": "#/definitions/v1ApiKeyResponseDto"
        },
        "secret": {
          "type": "string"
        }
      },
      "title": "Create API Key response DTO"
    },
    "v1CreateAssetRequest": {
      "type": "object",
      "properties": {
        "deviceAssetId": {
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1AssetType"
        },
        "originalPath": {
          "type": "string"
        },
        "originalFileName": {
          "type": "string"
        },
        "resizePath": {
          "type": "string"
        },
        "webpPath": {
          "type": "string"
        },
        "thumbhashPath": {
          "type": "string"
        },
        "encodedVideoPath": {
          "type": "string"
        },
        "duration": {
          "type": "string"
        },
        "isVisible": {
          "type": "boolean"
        },
        "isFavorite": {
          "type": "boolean"
        },
        "isArchived": {
          "type": "boolean"
        },
        "fileCreatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "fileModifiedAt": {
          "type": "string",
          "format": "date-time"
        },
        "libraryId": {
          "type": "string"
        }
      },
      "title": "Create asset request for upload"
    },
    "v1CreateMemoryRequest": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1MemoryType"
        },
        "memoryAt": {
          "type": "string",
          "format": "date-time"
        },
        "data": {
          "$ref": "#/definitions/v1OnThisDayData"
        },
        "assetIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isSaved": {
          "type": "boolean"
        },
        "seenAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Create memory request"
    },
    "v1CreateProfileImageRequest": {
      "type": "object",
      "properties": {
        "file": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "Create profile image request"
    },
    "v1CreateProfileImageResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "profileImagePath": {
          "type": "string"
        },
        "profileChangedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Create profile image response"
    },
    "v1CreateUserAdminRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "quotaSizeInBytes": {
          "type": "string",
          "format": "int64"
        },
        "shouldChangePassword": {
          "type": "boolean"
        },
        "storageLabel": {
          "type": "string"
        }
      },
      "title": "Create user admin request"
    },
    "v1DeleteAssetsRequest": {
      "type": "object",
      "properties": {
        "assetIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "force": {
          "type": "boolean"
        }
      },
      "title": "Delete assets request"
    },
    "v1DeleteNotificationsRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Delete notifications request"
    },
    "v1DownloadAssetResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte"
        },
        "contentType": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        }
      },
      "title": "Download asset response"
    },
    "v1DownloadResponse": {
      "type": "object",
      "properties": {
        "includeEmbeddedVideos": {
          "type": "boolean"
        }
      },
      "title": "Download response"
    },
    "v1DownloadUpdate": {
      "type": "object",
      "properties": {
        "includeEmbeddedVideos": {
          "type": "boolean"
        }
      }
    },
    "v1EmailNotificationsResponse": {
      "type": "object",
      "properties": {
        "albumInvite": {
          "type": "boolean"
        },
        "albumUpdate": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        }
      },
      "title": "Email notifications response"
    },
    "v1EmailNotificationsUpdate": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "albumInvite": {
          "type": "boolean"
        },
        "albumUpdate": {
          "type": "boolean"
        }
      }
    },
    "v1ExifInfo": {
      "type": "object",
      "properties": {
        "make": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "exifImageWidth": {
          "type": "integer",
          "format": "int32"
        },
        "exifImageHeight": {
          "type": "integer",
          "format": "int32"
        },
        "fileSizeInByte": {
          "type": "string",
          "format": "int64"
        },
        "orientation": {
          "type": "string"
        },
        "dateTimeOriginal": {
          "type": "string",
          "format": "date-time"
        },
        "modifyDate": {
          "type": "string",
          "format": "date-time"
        },
        "timeZone": {
          "type": "string"
        },
        "lensModel": {
          "type": "string"
        },
        "fNumber": {
          "type": "number",
          "format": "double"
        },
        "focalLength": {
          "type": "number",
          "format": "double"
        },
        "iso": {
          "type": "integer",
          "format": "int32"
        },
        "exposureTime": {
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "title": "EXIF information for assets"
    },
    "v1FoldersResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "sizeThreshold": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Preference sub-messages (these would need to be defined based on the actual structure)"
    },
    "v1FoldersUpdate": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "sizeThreshold": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1GetActivitiesResponse": {
      "type": "object",
      "properties": {
        "activities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ActivityResponseDto"
          }
        }
      },
      "title": "Get activities response (wrapper for array)"
    },
    "v1GetAllAlbumsResponse": {
      "type": "object",
      "properties": {
        "albums": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Album"
          }
        }
      },
      "title": "Get all albums response"
    },
    "v1GetAllUserAssetsByDeviceIdResponse": {
      "type": "object",
      "properties": {
        "assetIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Get assets by device ID response"
    },
    "v1GetApiKeysResponse": {
      "type": "object",
      "properties": {
        "apiKeys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ApiKeyResponseDto"
          }
        }
      },
      "title": "Get API keys response (wrapper for array)"
    },
    "v1GetAssetThumbnailResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte"
        },
        "contentType": {
          "type": "string"
        }
      },
      "title": "Get asset thumbnail response"
    },
    "v1GetAssetsResponse": {
      "type": "object",
      "properties": {
        "assets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Asset"
          }
        },
        "pageInfo": {
          "$ref": "#/definitions/v1PageInfo"
        }
      },
      "title": "Get assets response"
    },
    "v1GetNotificationsResponse": {
      "type": "object",
      "properties": {
        "notifications": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1NotificationDto"
          }
        }
      },
      "title": "Get notifications response"
    },
    "v1GetProfileImageResponse": {
      "type": "object",
      "properties": {
        "imageData": {
          "type": "string",
          "format": "byte"
        },
        "contentType": {
          "type": "string"
        }
      },
      "title": "Get profile image response"
    },
    "v1GetRandomResponse": {
      "type": "object",
      "properties": {
        "assets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Asset"
          }
        }
      },
      "title": "Get random assets response (deprecated)"
    },
    "v1GetSearchSuggestionsResponse": {
      "type": "object",
      "properties": {
        "suggestions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Get search suggestions response (wrapper for array)"
    },
    "v1GetSystemConfigTemplateRequest": {
      "type": "object",
      "properties": {
        "template": {
          "type": "string"
        }
      },
      "title": "Get system config template request"
    },
    "v1GetTimeBucketsResponse": {
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TimeBucketsResponseDto"
          }
        }
      },
      "title": "Get time buckets response"
    },
    "v1ImageFormat": {
      "type": "string",
      "enum": [
        "IMAGE_FORMAT_UNSPECIFIED",
        "IMAGE_FORMAT_JPEG",
        "IMAGE_FORMAT_WEBP"
      ],
      "default": "IMAGE_FORMAT_UNSPECIFIED"
    },
    "v1JobCommand": {
      "type": "string",
      "enum": [
        "JOB_COMMAND_UNSPECIFIED",
        "JOB_COMMAND_START",
        "JOB_COMMAND_PAUSE",
        "JOB_COMMAND_RESUME",
        "JOB_COMMAND_EMPTY",
        "JOB_COMMAND_CLEAR_FAILED"
      ],
      "default": "JOB_COMMAND_UNSPECIFIED",
      "title": "Job command enum"
    },
    "v1JobCommandDto": {
      "type": "object",
      "properties": {
        "command": {
          "$ref": "#/definitions/v1JobCommand"
        },
        "force": {
          "type": "boolean"
        }
      },
      "title": "Job command DTO"
    },
    "v1JobName": {
      "type": "string",
      "enum": [
        "JOB_NAME_UNSPECIFIED",
        "JOB_NAME_BACKGROUND_TASK",
        "JOB_NAME_CLIP_ENCODING",
        "JOB_NAME_DUPLICATE_DETECTION",
        "JOB_NAME_FACE_DETECTION",
        "JOB_NAME_FACIAL_RECOGNITION",
        "JOB_NAME_LIBRARY",
        "JOB_NAME_METADATA_EXTRACTION",
        "JOB_NAME_MIGRATION",
        "JOB_NAME_NOTIFICATION",
        "JOB_NAME_SEARCH",
        "JOB_NAME_SIDECAR",
        "JOB_NAME_SMART_SEARCH",
        "JOB_NAME_STORAGE_TEMPLATE_MIGRATION",
        "JOB_NAME_THUMBNAIL_GENERATION",
        "JOB_NAME_VIDEO_CONVERSION"
      ],
      "default": "JOB_NAME_UNSPECIFIED",
      "title": "Job name enum"
    },
    "v1JobStatusDto": {
      "type": "object",
      "properties": {
        "isActive": {
          "type": "boolean"
        },
        "isPaused": {
          "type": "boolean"
        },
        "queueStatus": {
          "$ref": "#/definitions/v1QueueStatusDto"
        }
      },
      "title": "Job status DTO"
    },
    "v1LicenseKeyRequest": {
      "type": "object",
      "properties": {
        "activationKey": {
          "type": "string"
        },
        "licenseKey": {
          "type": "string"
        }
      },
      "title": "License key request"
    },
    "v1LicenseResponse": {
      "type": "object",
      "properties": {
        "activatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "activationKey": {
          "type": "string"
        },
        "licenseKey": {
          "type": "string"
        }
      },
      "title": "License response"
    },
    "v1LoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "title": "Login request"
    },
    "v1LoginResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "profileImagePath": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "shouldChangePassword": {
          "type": "boolean"
        }
      },
      "title": "Login response"
    },
    "v1LogoutResponse": {
      "type": "object",
      "properties": {
        "successful": {
          "type": "boolean"
        },
        "redirectUri": {
          "type": "string"
        }
      },
      "title": "Logout response"
    },
    "v1MemoriesResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "title": "Memories response"
    },
    "v1MemoriesUpdate": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "v1Memory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "ownerId": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1MemoryType"
        },
        "memoryAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "isSaved": {
          "type": "boolean"
        },
        "data": {
          "$ref": "#/definitions/v1OnThisDayData"
        },
        "assets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Asset"
          }
        },
        "seenAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        },
        "showAt": {
          "type": "string",
          "format": "date-time"
        },
        "hideAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Memory message"
    },
    "v1MemoryType": {
      "type": "string",
      "enum": [
        "MEMORY_TYPE_UNSPECIFIED",
        "MEMORY_TYPE_ON_THIS_DAY"
      ],
      "default": "MEMORY_TYPE_UNSPECIFIED",
      "title": "Memory types"
    },
    "v1NotificationDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "level": {
          "$ref": "#/definitions/v1NotificationLevel"
        },
        "type": {
          "$ref": "#/definitions/v1NotificationType"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "readAt": {
          "type": "string",
          "format": "date-time"
        },
        "data": {
          "type": "object"
        }
      },
      "title": "Notification DTO"
    },
    "v1NotificationLevel": {
      "type": "string",
      "enum": [
        "NOTIFICATION_LEVEL_UNSPECIFIED",
        "NOTIFICATION_LEVEL_SUCCESS",
        "NOTIFICATION_LEVEL_ERROR",
        "NOTIFICATION_LEVEL_WARNING",
        "NOTIFICATION_LEVEL_INFO"
      ],
      "default": "NOTIFICATION_LEVEL_UNSPECIFIED",
      "title": "Notification level enum"
    },
    "v1NotificationType": {
      "type": "string",
      "enum": [
        "NOTIFICATION_TYPE_UNSPECIFIED",
        "NOTIFICATION_TYPE_JOB_FAILED",
        "NOTIFICATION_TYPE_BACKUP_FAILED",
        "NOTIFICATION_TYPE_SYSTEM_MESSAGE",
        "NOTIFICATION_TYPE_CUSTOM"
      ],
      "default": "NOTIFICATION_TYPE_UNSPECIFIED",
      "title": "Notification type enum"
    },
    "v1OnThisDayData": {
      "type": "object",
      "properties": {
        "year": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "OnThisDay data structure"
    },
    "v1PageInfo": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "total": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "Pagination"
    },
    "v1PeopleResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "sizeThreshold": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1PeopleUpdate": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "sizeThreshold": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1PersonResponseDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "birthDate": {
          "type": "string"
        },
        "thumbnailPath": {
          "type": "string"
        },
        "isHidden": {
          "type": "boolean"
        }
      },
      "title": "Person response DTO"
    },
    "v1PersonWithFacesResponseDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "birthDate": {
          "type": "string"
        },
        "thumbnailPath": {
          "type": "string"
        },
        "isHidden": {
          "type": "boolean"
        },
        "faces": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AssetFaceResponseDto"
          }
        }
      },
      "title": "Person with faces response DTO"
    },
    "v1PlaceResponseDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "admin1": {
          "type": "string"
        },
        "admin2": {
          "type": "string"
        }
      },
      "title": "Place response DTO"
    },
    "v1PlayAssetVideoResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte"
        },
        "contentType": {
          "type": "string"
        }
      },
      "title": "Play asset video response"
    },
    "v1PurchaseResponse": {
      "type": "object",
      "properties": {
        "hideBanner": {
          "type": "boolean"
        },
        "showSupportBadge": {
          "type": "boolean"
        }
      },
      "title": "Purchase response"
    },
    "v1PurchaseUpdate": {
      "type": "object",
      "properties": {
        "showSupportBadge": {
          "type": "boolean"
        }
      }
    },
    "v1QueueStatusDto": {
      "type": "object",
      "properties": {
        "active": {
          "type": "integer",
          "format": "int32"
        },
        "completed": {
          "type": "integer",
          "format": "int32"
        },
        "delayed": {
          "type": "integer",
          "format": "int32"
        },
        "failed": {
          "type": "integer",
          "format": "int32"
        },
        "paused": {
          "type": "integer",
          "format": "int32"
        },
        "waiting": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Queue status DTO"
    },
    "v1RatingsResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "v1RatingsUpdate": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "v1ReactionLevel": {
      "type": "string",
      "enum": [
        "REACTION_LEVEL_UNSPECIFIED",
        "REACTION_LEVEL_ALBUM",
        "REACTION_LEVEL_ASSET"
      ],
      "default": "REACTION_LEVEL_UNSPECIFIED",
      "title": "Reaction level enum"
    },
    "v1ReactionType": {
      "type": "string",
      "enum": [
        "REACTION_TYPE_UNSPECIFIED",
        "REACTION_TYPE_COMMENT",
        "REACTION_TYPE_LIKE"
      ],
      "default": "REACTION_TYPE_UNSPECIFIED",
      "title": "Reaction type enum"
    },
    "v1RemoveAssetFromAlbumResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1BulkIdResponse"
          }
        }
      },
      "title": "Remove asset from album response"
    },
    "v1RunAssetJobsRequest": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/v1AssetJobName"
        },
        "assetIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Run asset jobs request"
    },
    "v1SearchCitiesResponse": {
      "type": "object",
      "properties": {
        "cities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Search cities response (wrapper for array)"
    },
    "v1SearchExploreItemResponseDto": {
      "type": "object",
      "properties": {
        "fieldName": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SearchExploreItemValueResponseDto"
          }
        }
      },
      "title": "Search explore item response DTO"
    },
    "v1SearchExploreItemValueResponseDto": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/v1AssetResponseDto"
        }
      },
      "title": "Search explore item value response DTO"
    },
    "v1SearchExploreResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SearchExploreItemResponseDto"
          }
        }
      },
      "title": "Search explore response (wrapper for array)"
    },
    "v1SearchFacetCountResponseDto": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Search facet count response DTO"
    },
    "v1SearchFacetResponseDto": {
      "type": "object",
      "properties": {
        "cities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SearchFacetCountResponseDto"
          }
        },
        "cameraMakes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SearchFacetCountResponseDto"
          }
        },
        "cameraModels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SearchFacetCountResponseDto"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SearchFacetCountResponseDto"
          }
        },
        "objects": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SearchFacetCountResponseDto"
          }
        }
      },
      "title": "Search facet response DTO"
    },
    "v1SearchMemoriesResponse": {
      "type": "object",
      "properties": {
        "memories": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Memory"
          }
        }
      },
      "title": "Search memories response"
    },
    "v1SearchMetadataRequest": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "make": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "objects": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        },
        "isArchived": {
          "type": "boolean"
        },
        "isEncoded": {
          "type": "boolean"
        },
        "isExternal": {
          "type": "boolean"
        },
        "isFavorite": {
          "type": "boolean"
        },
        "isMotion": {
          "type": "boolean"
        },
        "isOffline": {
          "type": "boolean"
        },
        "isReadOnly": {
          "type": "boolean"
        },
        "isVisible": {
          "type": "boolean"
        },
        "libraryId": {
          "type": "string"
        },
        "lensModel": {
          "type": "string"
        },
        "originalFileName": {
          "type": "string"
        },
        "originalPath": {
          "type": "string"
        },
        "recentlyAdded": {
          "type": "boolean"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "takenAfter": {
          "type": "string",
          "format": "date-time"
        },
        "takenBefore": {
          "type": "string",
          "format": "date-time"
        },
        "trashedAfter": {
          "type": "string",
          "format": "date-time"
        },
        "trashedBefore": {
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "$ref": "#/definitions/v1AssetType"
        },
        "updatedAfter": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBefore": {
          "type": "string",
          "format": "date-time"
        },
        "withArchived": {
          "type": "boolean"
        },
        "withDeleted": {
          "type": "boolean"
        },
        "withExif": {
          "type": "boolean"
        },
        "withPeople": {
          "type": "boolean"
        },
        "withPartners": {
          "type": "boolean"
        },
        "withStacked": {
          "type": "boolean"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Search metadata request"
    },
    "v1SearchPersonResponse": {
      "type": "object",
      "properties": {
        "people": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PersonResponseDto"
          }
        }
      },
      "title": "Search person response (wrapper for array)"
    },
    "v1SearchPlacesResponse": {
      "type": "object",
      "properties": {
        "places": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1PlaceResponseDto"
          }
        }
      },
      "title": "Search places response (wrapper for array)"
    },
    "v1SearchResponse": {
      "type": "object",
      "properties": {
        "assets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AssetResponseDto"
          }
        },
        "albums": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AlbumResponseDto"
          }
        },
        "total": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Search response"
    },
    "v1SearchResponseDto": {
      "type": "object",
      "properties": {
        "assets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AssetResponseDto"
          }
        },
        "albums": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AlbumResponseDto"
          }
        },
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "facets": {
          "$ref": "#/definitions/v1SearchFacetResponseDto"
        }
      },
      "title": "Search response DTO"
    },
    "v1SearchSmartRequest": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "make": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "objects": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        },
        "isArchived": {
          "type": "boolean"
        },
        "isEncoded": {
          "type": "boolean"
        },
        "isExternal": {
          "type": "boolean"
        },
        "isFavorite": {
          "type": "boolean"
        },
        "isMotion": {
          "type": "boolean"
        },
        "isOffline": {
          "type": "boolean"
        },
        "isReadOnly": {
          "type": "boolean"
        },
        "isVisible": {
          "type": "boolean"
        },
        "libraryId": {
          "type": "string"
        },
        "lensModel": {
          "type": "string"
        },
        "originalFileName": {
          "type": "string"
        },
        "originalPath": {
          "type": "string"
        },
        "recentlyAdded": {
          "type": "boolean"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "takenAfter": {
          "type": "string",
          "format": "date-time"
        },
        "takenBefore": {
          "type": "string",
          "format": "date-time"
        },
        "trashedAfter": {
          "type": "string",
          "format": "date-time"
        },
        "trashedBefore": {
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "$ref": "#/definitions/v1AssetType"
        },
        "updatedAfter": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBefore": {
          "type": "string",
          "format": "date-time"
        },
        "withArchived": {
          "type": "boolean"
        },
        "withDeleted": {
          "type": "boolean"
        },
        "withExif": {
          "type": "boolean"
        },
        "withPeople": {
          "type": "boolean"
        },
        "withPartners": {
          "type": "boolean"
        },
        "withStacked": {
          "type": "boolean"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Search smart request"
    },
    "v1SearchSmartResponse": {
      "type": "object",
      "properties": {
        "assets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1AssetResponseDto"
          }
        }
      },
      "title": "Search smart response (wrapper for array)"
    },
    "v1SearchUsersAdminResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UserAdminResponseDto"
          }
        }
      },
      "title": "Search users admin response (wrapper for array)"
    },
    "v1SendNotificationRequest": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "userIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Send notification request"
    },
    "v1ServerAboutResponse": {
      "type": "object",
      "properties": {
        "build": {
          "type": "string"
        },
        "buildImage": {
          "type": "string"
        },
        "buildImageUrl": {
          "type": "string"
        },
        "buildUrl": {
          "type": "string"
        },
        "exiftool": {
          "type": "string"
        },
        "ffmpeg": {
          "type": "string"
        },
        "imagemagick": {
          "type": "string"
        },
        "libvips": {
          "type": "string"
        },
        "licensed": {
          "type": "boolean"
        },
        "nodejs": {
          "type": "string"
        },
        "repository": {
          "type": "string"
        },
        "repositoryUrl": {
          "type": "string"
        },
        "sourceCommit": {
          "type": "string"
        },
        "sourceRef": {
          "type": "string"
        },
        "sourceUrl": {
          "type": "string"
        },
        "thirdPartyBugFeatureUrl": {
          "type": "string"
        },
        "thirdPartyDocumentationUrl": {
          "type": "string"
        },
        "thirdPartySourceUrl": {
          "type": "string"
        },
        "thirdPartySupportUrl": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "versionUrl": {
          "type": "string"
        }
      },
      "title": "Server about information response"
    },
    "v1ServerConfigResponse": {
      "type": "object",
      "properties": {
        "externalDomain": {
          "type": "string"
        },
        "isInitialized": {
          "type": "boolean"
        },
        "isOnboarded": {
          "type": "boolean"
        },
        "loginPageMessage": {
          "type": "string"
        },
        "mapDarkStyleUrl": {
          "type": "string"
        },
        "mapLightStyleUrl": {
          "type": "string"
        },
        "oauthButtonText": {
          "type": "string"
        },
        "publicUsers": {
          "type": "boolean"
        },
        "trashDays": {
          "type": "integer",
          "format": "int32"
        },
        "userDeleteDelay": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Server configuration response"
    },
    "v1ServerFeaturesResponse": {
      "type": "object",
      "properties": {
        "configFile": {
          "type": "boolean"
        },
        "duplicateDetection": {
          "type": "boolean"
        },
        "email": {
          "type": "boolean"
        },
        "facialRecognition": {
          "type": "boolean"
        },
        "importFaces": {
          "type": "boolean"
        },
        "map": {
          "type": "boolean"
        },
        "oauth": {
          "type": "boolean"
        },
        "oauthAutoLaunch": {
          "type": "boolean"
        },
        "passwordLogin": {
          "type": "boolean"
        },
        "reverseGeocoding": {
          "type": "boolean"
        },
        "search": {
          "type": "boolean"
        },
        "sidecar": {
          "type": "boolean"
        },
        "smartSearch": {
          "type": "boolean"
        },
        "trash": {
          "type": "boolean"
        }
      },
      "title": "Server features response"
    },
    "v1ServerMediaTypesResponse": {
      "type": "object",
      "properties": {
        "image": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sidecar": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "video": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Server media types response"
    },
    "v1ServerPingResponse": {
      "type": "object",
      "properties": {
        "res": {
          "type": "string"
        }
      },
      "title": "Server ping response"
    },
    "v1ServerStatsResponse": {
      "type": "object",
      "properties": {
        "photos": {
          "type": "integer",
          "format": "int32"
        },
        "usage": {
          "type": "string",
          "format": "int64"
        },
        "usageByUser": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1UsageByUser"
          }
        },
        "usagePhotos": {
          "type": "string",
          "format": "int64"
        },
        "usageVideos": {
          "type": "string",
          "format": "int64"
        },
        "videos": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Server statistics response"
    },
    "v1ServerStorageResponse": {
      "type": "object",
      "properties": {
        "diskAvailable": {
          "type": "string"
        },
        "diskAvailableRaw": {
          "type": "string",
          "format": "int64"
        },
        "diskSize": {
          "type": "string"
        },
        "diskSizeRaw": {
          "type": "string",
          "format": "int64"
        },
        "diskUsagePercentage": {
          "type": "number",
          "format": "double"
        },
        "diskUse": {
          "type": "string"
        },
        "diskUseRaw": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "Server storage response"
    },
    "v1ServerThemeResponse": {
      "type": "object",
      "properties": {
        "customCss": {
          "type": "string"
        }
      },
      "title": "Server theme response"
    },
    "v1ServerVersionHistoryItem": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "Version history item"
    },
    "v1ServerVersionHistoryResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ServerVersionHistoryItem"
          }
        }
      },
      "title": "Server version history response"
    },
    "v1ServerVersionResponse": {
      "type": "object",
      "properties": {
        "major": {
          "type": "integer",
          "format": "int32"
        },
        "minor": {
          "type": "integer",
          "format": "int32"
        },
        "patch": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Server version response"
    },
    "v1SharedLinksResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "showMetadata": {
          "type": "boolean"
        },
        "passwordOptions": {
          "type": "string"
        }
      }
    },
    "v1SharedLinksUpdate": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "showMetadata": {
          "type": "boolean"
        },
        "passwordOptions": {
          "type": "string"
        }
      }
    },
    "v1SmartInfo": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "objects": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Smart information for assets"
    },
    "v1SystemConfigDto": {
      "type": "object",
      "properties": {
        "ffmpeg": {
          "$ref": "#/definitions/v1SystemConfigFFmpegDto"
        },
        "job": {
          "$ref": "#/definitions/v1SystemConfigJobDto"
        },
        "library": {
          "$ref": "#/definitions/v1SystemConfigLibraryDto"
        },
        "logging": {
          "$ref": "#/definitions/v1SystemConfigLoggingDto"
        },
        "machineLearning": {
          "$ref": "#/definitions/v1SystemConfigMachineLearningDto"
        },
        "map": {
          "$ref": "#/definitions/v1SystemConfigMapDto"
        },
        "newVersionCheck": {
          "$ref": "#/definitions/v1SystemConfigNewVersionCheckDto"
        },
        "notifications": {
          "$ref": "#/definitions/v1SystemConfigNotificationsDto"
        },
        "oauth": {
          "$ref": "#/definitions/v1SystemConfigOAuthDto"
        },
        "passwordLogin": {
          "$ref": "#/definitions/v1SystemConfigPasswordLoginDto"
        },
        "reverseGeocoding": {
          "$ref": "#/definitions/v1SystemConfigReverseGeocodingDto"
        },
        "server": {
          "$ref": "#/definitions/v1SystemConfigServerDto"
        },
        "storageTemplate": {
          "$ref": "#/definitions/v1SystemConfigStorageTemplateDto"
        },
        "theme": {
          "$ref": "#/definitions/v1SystemConfigThemeDto"
        },
        "trash": {
          "$ref": "#/definitions/v1SystemConfigTrashDto"
        },
        "user": {
          "$ref": "#/definitions/v1SystemConfigUserDto"
        }
      },
      "title": "System configuration DTO"
    },
    "v1SystemConfigFFmpegDto": {
      "type": "object",
      "properties": {
        "crf": {
          "type": "string"
        },
        "threads": {
          "type": "string"
        },
        "preset": {
          "type": "string"
        },
        "targetVideoCodec": {
          "type": "string"
        },
        "acceptedVideoCodecs": {
          "type": "string"
        },
        "targetAudioCodec": {
          "type": "string"
        },
        "acceptedAudioCodecs": {
          "type": "string"
        },
        "targetResolution": {
          "type": "string"
        },
        "maxBitrate": {
          "type": "string"
        },
        "bframes": {
          "type": "string"
        },
        "refs": {
          "type": "string"
        },
        "gopSize": {
          "type": "string"
        },
        "npl": {
          "type": "string"
        },
        "temporalAq": {
          "type": "string"
        },
        "cqMode": {
          "type": "string"
        },
        "twoPass": {
          "type": "string"
        },
        "preferredHwDevice": {
          "type": "string"
        },
        "transcode": {
          "type": "string"
        },
        "tonemap": {
          "type": "string"
        }
      },
      "title": "FFmpeg configuration"
    },
    "v1SystemConfigJobDto": {
      "type": "object",
      "properties": {
        "backgroundTaskConcurrency": {
          "type": "integer",
          "format": "int32"
        },
        "clipEncodingConcurrency": {
          "type": "integer",
          "format": "int32"
        },
        "duplicateDetectionConcurrency": {
          "type": "integer",
          "format": "int32"
        },
        "faceDetectionConcurrency": {
          "type": "integer",
          "format": "int32"
        },
        "facialRecognitionConcurrency": {
          "type": "integer",
          "format": "int32"
        },
        "libraryConcurrency": {
          "type": "integer",
          "format": "int32"
        },
        "metadataExtractionConcurrency": {
          "type": "integer",
          "format": "int32"
        },
        "migrationConcurrency": {
          "type": "integer",
          "format": "int32"
        },
        "searchConcurrency": {
          "type": "integer",
          "format": "int32"
        },
        "sidecarConcurrency": {
          "type": "integer",
          "format": "int32"
        },
        "smartSearchConcurrency": {
          "type": "integer",
          "format": "int32"
        },
        "storageTemplateMigrationConcurrency": {
          "type": "integer",
          "format": "int32"
        },
        "thumbnailGenerationConcurrency": {
          "type": "integer",
          "format": "int32"
        },
        "videoConversionConcurrency": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Job configuration"
    },
    "v1SystemConfigLibraryDto": {
      "type": "object",
      "properties": {
        "scan": {
          "$ref": "#/definitions/v1SystemConfigLibraryScanDto"
        },
        "watch": {
          "$ref": "#/definitions/v1SystemConfigLibraryWatchDto"
        }
      },
      "title": "Library configuration"
    },
    "v1SystemConfigLibraryScanDto": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "cronExpression": {
          "type": "string"
        }
      },
      "title": "Library scan configuration"
    },
    "v1SystemConfigLibraryWatchDto": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "title": "Library watch configuration"
    },
    "v1SystemConfigLoggingDto": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "level": {
          "type": "string"
        }
      },
      "title": "Logging configuration"
    },
    "v1SystemConfigMachineLearningClipDto": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "modelName": {
          "type": "string"
        }
      },
      "title": "Machine learning CLIP configuration"
    },
    "v1SystemConfigMachineLearningDto": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "url": {
          "type": "string"
        },
        "clip": {
          "$ref": "#/definitions/v1SystemConfigMachineLearningClipDto"
        },
        "duplicateDetection": {
          "$ref": "#/definitions/v1SystemConfigMachineLearningDuplicateDetectionDto"
        },
        "facialRecognition": {
          "$ref": "#/definitions/v1SystemConfigMachineLearningFacialRecognitionDto"
        }
      },
      "title": "Machine learning configuration"
    },
    "v1SystemConfigMachineLearningDuplicateDetectionDto": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "maxDistance": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Machine learning duplicate detection configuration"
    },
    "v1SystemConfigMachineLearningFacialRecognitionDto": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "modelName": {
          "type": "string"
        },
        "minScore": {
          "type": "integer",
          "format": "int32"
        },
        "maxDistance": {
          "type": "integer",
          "format": "int32"
        },
        "minFaces": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Machine learning facial recognition configuration"
    },
    "v1SystemConfigMapDto": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "lightStyle": {
          "type": "string"
        },
        "darkStyle": {
          "type": "string"
        }
      },
      "title": "Map configuration"
    },
    "v1SystemConfigNewVersionCheckDto": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "title": "New version check configuration"
    },
    "v1SystemConfigNotificationsDto": {
      "type": "object",
      "properties": {
        "smtp": {
          "$ref": "#/definitions/v1SystemConfigNotificationsSmtpDto"
        }
      },
      "title": "Notifications configuration"
    },
    "v1SystemConfigNotificationsSmtpDto": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "from": {
          "type": "string"
        },
        "replyTo": {
          "type": "string"
        },
        "transport": {
          "$ref": "#/definitions/v1SystemConfigSmtpTransportDto"
        }
      },
      "title": "SMTP notifications configuration"
    },
    "v1SystemConfigOAuthDto": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "issuerUrl": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "storageLabelClaim": {
          "type": "string"
        },
        "storageQuotaClaim": {
          "type": "string"
        },
        "defaultStorageQuota": {
          "type": "string"
        },
        "autoRegister": {
          "type": "boolean"
        },
        "autoLaunch": {
          "type": "boolean"
        },
        "buttonText": {
          "type": "string"
        },
        "mobileOverrideEnabled": {
          "type": "boolean"
        },
        "mobileRedirectUri": {
          "type": "string"
        }
      },
      "title": "OAuth configuration"
    },
    "v1SystemConfigPasswordLoginDto": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "title": "Password login configuration"
    },
    "v1SystemConfigReverseGeocodingDto": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "title": "Reverse geocoding configuration"
    },
    "v1SystemConfigServerDto": {
      "type": "object",
      "properties": {
        "externalDomain": {
          "type": "string"
        },
        "loginPageMessage": {
          "type": "string"
        }
      },
      "title": "Server configuration"
    },
    "v1SystemConfigSmtpTransportDto": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "ignoreCert": {
          "type": "boolean"
        }
      },
      "title": "SMTP transport configuration"
    },
    "v1SystemConfigStorageTemplateDto": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "hashVerificationEnabled": {
          "type": "boolean"
        },
        "template": {
          "type": "string"
        }
      },
      "title": "Storage template configuration"
    },
    "v1SystemConfigTemplateStorageOptionDto": {
      "type": "object",
      "properties": {
        "yearOptions": {
          "type": "integer",
          "format": "int32"
        },
        "monthOptions": {
          "type": "integer",
          "format": "int32"
        },
        "dayOptions": {
          "type": "integer",
          "format": "int32"
        },
        "hourOptions": {
          "type": "integer",
          "format": "int32"
        },
        "minuteOptions": {
          "type": "integer",
          "format": "int32"
        },
        "secondOptions": {
          "type": "integer",
          "format": "int32"
        },
        "presetOptions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "System config template storage option DTO"
    },
    "v1SystemConfigThemeDto": {
      "type": "object",
      "properties": {
        "customCss": {
          "type": "string"
        }
      },
      "title": "Theme configuration"
    },
    "v1SystemConfigTrashDto": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "days": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Trash configuration"
    },
    "v1SystemConfigUserDto": {
      "type": "object",
      "properties": {
        "deleteDelay": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "User configuration"
    },
    "v1TagResponseDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/v1User"
        }
      },
      "title": "Tag response DTO"
    },
    "v1TagsResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "sizeThreshold": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1TagsUpdate": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "sizeThreshold": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1TemplateResponseDto": {
      "type": "object",
      "properties": {
        "html": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        }
      },
      "title": "Template response DTO"
    },
    "v1TestEmailNotificationRequest": {
      "type": "object",
      "properties": {
        "recipient": {
          "type": "string"
        }
      },
      "title": "Test email notification request"
    },
    "v1TestEmailResponseDto": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "title": "Test email response DTO"
    },
    "v1TimeBucketAssetResponseDto": {
      "type": "object",
      "properties": {
        "assets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Asset"
          }
        },
        "timeBucket": {
          "type": "string"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Time bucket asset response"
    },
    "v1TimeBucketsResponseDto": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "timeBucket": {
          "type": "string"
        }
      },
      "title": "Time buckets response DTO"
    },
    "v1UpdateAssetsRequest": {
      "type": "object",
      "properties": {
        "assetIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isFavorite": {
          "type": "boolean"
        },
        "isArchived": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "dateTimeOriginal": {
          "type": "string",
          "format": "date-time"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "updateMask": {
          "type": "string"
        }
      },
      "title": "Bulk update request"
    },
    "v1UpdateNotificationsRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "readAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Update notifications request"
    },
    "v1UploadAssetRequest": {
      "type": "object",
      "properties": {
        "assetData": {
          "$ref": "#/definitions/v1CreateAssetRequest"
        },
        "key": {
          "type": "string"
        },
        "checksum": {
          "type": "string",
          "title": "x-immich-checksum header"
        }
      },
      "title": "Upload asset request"
    },
    "v1UsageByUser": {
      "type": "object",
      "properties": {
        "photos": {
          "type": "integer",
          "format": "int32"
        },
        "quotaSizeInBytes": {
          "type": "string",
          "format": "int64"
        },
        "usage": {
          "type": "string",
          "format": "int64"
        },
        "usagePhotos": {
          "type": "string",
          "format": "int64"
        },
        "usageVideos": {
          "type": "string",
          "format": "int64"
        },
        "userId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "videos": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Usage by user"
    },
    "v1User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "avatarColor": {
          "$ref": "#/definitions/v1UserAvatarColor"
        },
        "profileImagePath": {
          "type": "string"
        },
        "profileChangedAt": {
          "type": "string",
          "format": "date-time"
        },
        "shouldChangePassword": {
          "type": "boolean"
        },
        "quotaSizeInBytes": {
          "type": "string",
          "format": "int64"
        },
        "storageLabel": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "User information"
    },
    "v1UserAdminResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "avatarColor": {
          "$ref": "#/definitions/v1UserAvatarColor"
        },
        "profileImagePath": {
          "type": "string"
        },
        "profileChangedAt": {
          "type": "string",
          "format": "date-time"
        },
        "shouldChangePassword": {
          "type": "boolean"
        },
        "quotaSizeInBytes": {
          "type": "string",
          "format": "int64"
        },
        "quotaUsageInBytes": {
          "type": "string",
          "format": "int64"
        },
        "storageLabel": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1UserStatus"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        },
        "oauthId": {
          "type": "string"
        },
        "license": {
          "$ref": "#/definitions/v1UserLicense"
        }
      },
      "title": "User admin response (includes sensitive fields)"
    },
    "v1UserAdminResponseDto": {
      "type": "object",
      "properties": {
        "avatarColor": {
          "$ref": "#/definitions/v1UserAvatarColor"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "oauthId": {
          "type": "string"
        },
        "profileImagePath": {
          "type": "string"
        },
        "profileChangedAt": {
          "type": "string",
          "format": "date-time"
        },
        "quotaSizeInBytes": {
          "type": "string",
          "format": "int64"
        },
        "shouldChangePassword": {
          "type": "boolean"
        },
        "storageLabel": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "User admin response DTO"
    },
    "v1UserAvatarColor": {
      "type": "string",
      "enum": [
        "USER_AVATAR_COLOR_UNSPECIFIED",
        "USER_AVATAR_COLOR_PRIMARY",
        "USER_AVATAR_COLOR_PINK",
        "USER_AVATAR_COLOR_RED",
        "USER_AVATAR_COLOR_YELLOW",
        "USER_AVATAR_COLOR_BLUE",
        "USER_AVATAR_COLOR_GREEN",
        "USER_AVATAR_COLOR_PURPLE",
        "USER_AVATAR_COLOR_ORANGE",
        "USER_AVATAR_COLOR_GRAY",
        "USER_AVATAR_COLOR_AMBER"
      ],
      "default": "USER_AVATAR_COLOR_UNSPECIFIED"
    },
    "v1UserLicense": {
      "type": "object",
      "properties": {
        "activatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "activationKey": {
          "type": "string"
        },
        "licenseKey": {
          "type": "string"
        }
      },
      "title": "User license information"
    },
    "v1UserLicenseKeyRequest": {
      "type": "object",
      "properties": {
        "activationKey": {
          "type": "string"
        },
        "licenseKey": {
          "type": "string"
        }
      },
      "title": "User license key request"
    },
    "v1UserLicenseResponse": {
      "type": "object",
      "properties": {
        "activatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "activationKey": {
          "type": "string"
        },
        "licenseKey": {
          "type": "string"
        }
      },
      "title": "User license response"
    },
    "v1UserPreferencesResponse": {
      "type": "object",
      "properties": {
        "download": {
          "$ref": "#/definitions/v1DownloadResponse"
        },
        "emailNotifications": {
          "$ref": "#/definitions/v1EmailNotificationsResponse"
        },
        "folders": {
          "$ref": "#/definitions/v1FoldersResponse"
        },
        "memories": {
          "$ref": "#/definitions/v1MemoriesResponse"
        },
        "people": {
          "$ref": "#/definitions/v1PeopleResponse"
        },
        "purchase": {
          "$ref": "#/definitions/v1PurchaseResponse"
        },
        "ratings": {
          "$ref": "#/definitions/v1RatingsResponse"
        },
        "sharedLinks": {
          "$ref": "#/definitions/v1SharedLinksResponse"
        },
        "tags": {
          "$ref": "#/definitions/v1TagsResponse"
        }
      },
      "title": "User preferences response"
    },
    "v1UserPreferencesResponseDto": {
      "type": "object",
      "properties": {
        "avatar": {
          "$ref": "#/definitions/v1AvatarResponse"
        },
        "download": {
          "$ref": "#/definitions/v1DownloadResponse"
        },
        "emailNotifications": {
          "$ref": "#/definitions/v1EmailNotificationsResponse"
        },
        "memories": {
          "$ref": "#/definitions/v1MemoriesResponse"
        },
        "purchase": {
          "$ref": "#/definitions/v1PurchaseResponse"
        }
      },
      "title": "User preferences response DTO"
    },
    "v1UserPreferencesUpdateRequest": {
      "type": "object",
      "properties": {
        "avatar": {
          "$ref": "#/definitions/v1AvatarUpdate"
        },
        "download": {
          "$ref": "#/definitions/v1DownloadUpdate"
        },
        "emailNotifications": {
          "$ref": "#/definitions/v1EmailNotificationsUpdate"
        },
        "folders": {
          "$ref": "#/definitions/v1FoldersUpdate"
        },
        "memories": {
          "$ref": "#/definitions/v1MemoriesUpdate"
        },
        "people": {
          "$ref": "#/definitions/v1PeopleUpdate"
        },
        "purchase": {
          "$ref": "#/definitions/v1PurchaseUpdate"
        },
        "ratings": {
          "$ref": "#/definitions/v1RatingsUpdate"
        },
        "sharedLinks": {
          "$ref": "#/definitions/v1SharedLinksUpdate"
        },
        "tags": {
          "$ref": "#/definitions/v1TagsUpdate"
        }
      },
      "title": "User preferences update request"
    },
    "v1UserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "avatarColor": {
          "$ref": "#/definitions/v1UserAvatarColor"
        },
        "profileImagePath": {
          "type": "string"
        },
        "profileChangedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "User response (public fields only)"
    },
    "v1UserStatisticsResponseDto": {
      "type": "object",
      "properties": {
        "photos": {
          "type": "integer",
          "format": "int32"
        },
        "usage": {
          "type": "string",
          "format": "int64"
        },
        "videos": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "User statistics response DTO"
    },
    "v1UserStatus": {
      "type": "string",
      "enum": [
        "USER_STATUS_UNSPECIFIED",
        "USER_STATUS_ACTIVE",
        "USER_STATUS_REMOVING",
        "USER_STATUS_DELETED"
      ],
      "default": "USER_STATUS_UNSPECIFIED",
      "title": "User status enum"
    },
    "v1UserUpdateMeRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "avatarColor": {
          "$ref": "#/definitions/v1UserAvatarColor"
        }
      },
      "title": "Update current user request"
    },
    "v1ValidateTokenResponse": {
      "type": "object",
      "properties": {
        "authStatus": {
          "type": "boolean"
        }
      },
      "title": "Validate token response"
    }
  }
}
