// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package sqlc

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type AssetVisibilityEnum string

const (
	AssetVisibilityEnumArchive  AssetVisibilityEnum = "archive"
	AssetVisibilityEnumTimeline AssetVisibilityEnum = "timeline"
	AssetVisibilityEnumHidden   AssetVisibilityEnum = "hidden"
	AssetVisibilityEnumLocked   AssetVisibilityEnum = "locked"
)

func (e *AssetVisibilityEnum) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = AssetVisibilityEnum(s)
	case string:
		*e = AssetVisibilityEnum(s)
	default:
		return fmt.Errorf("unsupported scan type for AssetVisibilityEnum: %T", src)
	}
	return nil
}

type NullAssetVisibilityEnum struct {
	AssetVisibilityEnum AssetVisibilityEnum
	Valid               bool // Valid is true if AssetVisibilityEnum is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullAssetVisibilityEnum) Scan(value interface{}) error {
	if value == nil {
		ns.AssetVisibilityEnum, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.AssetVisibilityEnum.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullAssetVisibilityEnum) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.AssetVisibilityEnum), nil
}

type AssetsStatusEnum string

const (
	AssetsStatusEnumActive  AssetsStatusEnum = "active"
	AssetsStatusEnumTrashed AssetsStatusEnum = "trashed"
	AssetsStatusEnumDeleted AssetsStatusEnum = "deleted"
)

func (e *AssetsStatusEnum) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = AssetsStatusEnum(s)
	case string:
		*e = AssetsStatusEnum(s)
	default:
		return fmt.Errorf("unsupported scan type for AssetsStatusEnum: %T", src)
	}
	return nil
}

type NullAssetsStatusEnum struct {
	AssetsStatusEnum AssetsStatusEnum
	Valid            bool // Valid is true if AssetsStatusEnum is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullAssetsStatusEnum) Scan(value interface{}) error {
	if value == nil {
		ns.AssetsStatusEnum, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.AssetsStatusEnum.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullAssetsStatusEnum) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.AssetsStatusEnum), nil
}

type Sourcetype string

const (
	SourcetypeMachineLearning Sourcetype = "machine-learning"
	SourcetypeExif            Sourcetype = "exif"
	SourcetypeManual          Sourcetype = "manual"
)

func (e *Sourcetype) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Sourcetype(s)
	case string:
		*e = Sourcetype(s)
	default:
		return fmt.Errorf("unsupported scan type for Sourcetype: %T", src)
	}
	return nil
}

type NullSourcetype struct {
	Sourcetype Sourcetype
	Valid      bool // Valid is true if Sourcetype is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullSourcetype) Scan(value interface{}) error {
	if value == nil {
		ns.Sourcetype, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.Sourcetype.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullSourcetype) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.Sourcetype), nil
}

type Activity struct {
	ID        pgtype.UUID
	CreatedAt pgtype.Timestamptz
	UpdatedAt pgtype.Timestamptz
	AlbumId   pgtype.UUID
	UserId    pgtype.UUID
	AssetId   pgtype.UUID
	Comment   pgtype.Text
	IsLiked   bool
	UpdateId  pgtype.UUID
}

type Album struct {
	ID        pgtype.UUID
	OwnerId   pgtype.UUID
	AlbumName string
	CreatedAt pgtype.Timestamptz
	// Asset ID to be used as thumbnail
	AlbumThumbnailAssetId pgtype.UUID
	UpdatedAt             pgtype.Timestamptz
	Description           string
	DeletedAt             pgtype.Timestamptz
	IsActivityEnabled     bool
	Order                 string
	UpdateId              pgtype.UUID
}

type AlbumUsersAudit struct {
	ID        pgtype.UUID
	AlbumId   pgtype.UUID
	UserId    pgtype.UUID
	DeletedAt pgtype.Timestamptz
}

type AlbumsAssetsAsset struct {
	AlbumsId  pgtype.UUID
	AssetsId  pgtype.UUID
	CreatedAt pgtype.Timestamptz
}

type AlbumsAudit struct {
	ID        pgtype.UUID
	AlbumId   pgtype.UUID
	UserId    pgtype.UUID
	DeletedAt pgtype.Timestamptz
}

type AlbumsSharedUsersUser struct {
	AlbumsId  pgtype.UUID
	UsersId   pgtype.UUID
	Role      string
	UpdateId  pgtype.UUID
	UpdatedAt pgtype.Timestamptz
}

type ApiKey struct {
	Name        string
	Key         string
	UserId      pgtype.UUID
	CreatedAt   pgtype.Timestamptz
	UpdatedAt   pgtype.Timestamptz
	ID          pgtype.UUID
	Permissions []string
	UpdateId    pgtype.UUID
}

type Asset struct {
	ID               pgtype.UUID
	DeviceAssetId    string
	OwnerId          pgtype.UUID
	DeviceId         string
	Type             string
	OriginalPath     string
	FileCreatedAt    pgtype.Timestamptz
	FileModifiedAt   pgtype.Timestamptz
	IsFavorite       bool
	Duration         pgtype.Text
	EncodedVideoPath pgtype.Text
	Checksum         []byte
	LivePhotoVideoId pgtype.UUID
	UpdatedAt        pgtype.Timestamptz
	CreatedAt        pgtype.Timestamptz
	OriginalFileName string
	SidecarPath      pgtype.Text
	Thumbhash        []byte
	IsOffline        bool
	LibraryId        pgtype.UUID
	IsExternal       bool
	DeletedAt        pgtype.Timestamptz
	LocalDateTime    pgtype.Timestamptz
	StackId          pgtype.UUID
	DuplicateId      pgtype.UUID
	Status           AssetsStatusEnum
	UpdateId         pgtype.UUID
	Visibility       AssetVisibilityEnum
}

type AssetFace struct {
	AssetId       pgtype.UUID
	PersonId      pgtype.UUID
	ImageWidth    int32
	ImageHeight   int32
	BoundingBoxX1 int32
	BoundingBoxY1 int32
	BoundingBoxX2 int32
	BoundingBoxY2 int32
	ID            pgtype.UUID
	SourceType    Sourcetype
	DeletedAt     pgtype.Timestamptz
}

type AssetFile struct {
	ID        pgtype.UUID
	AssetId   pgtype.UUID
	CreatedAt pgtype.Timestamptz
	UpdatedAt pgtype.Timestamptz
	Type      string
	Path      string
	UpdateId  pgtype.UUID
}

type AssetJobStatus struct {
	AssetId              pgtype.UUID
	FacesRecognizedAt    pgtype.Timestamptz
	MetadataExtractedAt  pgtype.Timestamptz
	DuplicatesDetectedAt pgtype.Timestamptz
	PreviewAt            pgtype.Timestamptz
	ThumbnailAt          pgtype.Timestamptz
}

type AssetStack struct {
	ID             pgtype.UUID
	PrimaryAssetId pgtype.UUID
	OwnerId        pgtype.UUID
}

type AssetsAudit struct {
	ID        pgtype.UUID
	AssetId   pgtype.UUID
	OwnerId   pgtype.UUID
	DeletedAt pgtype.Timestamptz
}

type Audit struct {
	ID         int32
	EntityType string
	EntityId   pgtype.UUID
	Action     string
	OwnerId    pgtype.UUID
	CreatedAt  pgtype.Timestamptz
}

type Exif struct {
	AssetId            pgtype.UUID
	Make               pgtype.Text
	Model              pgtype.Text
	ExifImageWidth     pgtype.Int4
	ExifImageHeight    pgtype.Int4
	FileSizeInByte     pgtype.Int8
	Orientation        pgtype.Text
	DateTimeOriginal   pgtype.Timestamptz
	ModifyDate         pgtype.Timestamptz
	LensModel          pgtype.Text
	FNumber            pgtype.Float8
	FocalLength        pgtype.Float8
	Iso                pgtype.Int4
	Latitude           pgtype.Float8
	Longitude          pgtype.Float8
	City               pgtype.Text
	State              pgtype.Text
	Country            pgtype.Text
	Description        string
	Fps                pgtype.Float8
	ExposureTime       pgtype.Text
	LivePhotoCID       pgtype.Text
	TimeZone           pgtype.Text
	ProjectionType     pgtype.Text
	ProfileDescription pgtype.Text
	Colorspace         pgtype.Text
	BitsPerSample      pgtype.Int4
	AutoStackId        pgtype.Text
	Rating             pgtype.Int4
	UpdatedAt          pgtype.Timestamptz
	UpdateId           pgtype.UUID
}

type FaceSearch struct {
	FaceId    pgtype.UUID
	Embedding interface{}
}

type GeodataPlace struct {
	ID               int32
	Name             string
	Longitude        float64
	Latitude         float64
	CountryCode      string
	Admin1Code       pgtype.Text
	Admin2Code       pgtype.Text
	ModificationDate pgtype.Date
	Admin1Name       pgtype.Text
	Admin2Name       pgtype.Text
	AlternateNames   pgtype.Text
}

type KyselyMigration struct {
	Name      string
	Timestamp string
}

type KyselyMigrationsLock struct {
	ID       string
	IsLocked int32
}

type Library struct {
	ID                pgtype.UUID
	Name              string
	OwnerId           pgtype.UUID
	ImportPaths       []string
	ExclusionPatterns []string
	CreatedAt         pgtype.Timestamptz
	UpdatedAt         pgtype.Timestamptz
	DeletedAt         pgtype.Timestamptz
	RefreshedAt       pgtype.Timestamptz
	UpdateId          pgtype.UUID
}

type MemoriesAssetsAsset struct {
	MemoriesId pgtype.UUID
	AssetsId   pgtype.UUID
}

type Memory struct {
	ID        pgtype.UUID
	CreatedAt pgtype.Timestamptz
	UpdatedAt pgtype.Timestamptz
	DeletedAt pgtype.Timestamptz
	OwnerId   pgtype.UUID
	Type      string
	Data      []byte
	IsSaved   bool
	MemoryAt  pgtype.Timestamptz
	SeenAt    pgtype.Timestamptz
	ShowAt    pgtype.Timestamptz
	HideAt    pgtype.Timestamptz
	UpdateId  pgtype.UUID
}

type Migration struct {
	ID        int32
	Timestamp int64
	Name      string
}

type MoveHistory struct {
	ID       pgtype.UUID
	EntityId pgtype.UUID
	PathType string
	OldPath  string
	NewPath  string
}

type NaturalearthCountry struct {
	ID          int32
	Admin       string
	AdminA3     string
	Type        string
	Coordinates pgtype.Polygon
}

type Notification struct {
	ID          pgtype.UUID
	CreatedAt   pgtype.Timestamptz
	UpdatedAt   pgtype.Timestamptz
	DeletedAt   pgtype.Timestamptz
	UpdateId    pgtype.UUID
	UserId      pgtype.UUID
	Level       string
	Type        string
	Data        []byte
	Title       string
	Description pgtype.Text
	ReadAt      pgtype.Timestamptz
}

type Partner struct {
	SharedById   pgtype.UUID
	SharedWithId pgtype.UUID
	CreatedAt    pgtype.Timestamptz
	UpdatedAt    pgtype.Timestamptz
	InTimeline   bool
	UpdateId     pgtype.UUID
}

type PartnersAudit struct {
	ID           pgtype.UUID
	SharedById   pgtype.UUID
	SharedWithId pgtype.UUID
	DeletedAt    pgtype.Timestamptz
}

type Person struct {
	ID            pgtype.UUID
	CreatedAt     pgtype.Timestamptz
	UpdatedAt     pgtype.Timestamptz
	OwnerId       pgtype.UUID
	Name          string
	ThumbnailPath string
	IsHidden      bool
	BirthDate     pgtype.Date
	FaceAssetId   pgtype.UUID
	IsFavorite    bool
	Color         pgtype.Text
	UpdateId      pgtype.UUID
}

type Session struct {
	ID           pgtype.UUID
	Token        string
	CreatedAt    pgtype.Timestamptz
	UpdatedAt    pgtype.Timestamptz
	UserId       pgtype.UUID
	DeviceType   string
	DeviceOS     string
	UpdateId     pgtype.UUID
	PinExpiresAt pgtype.Timestamptz
	ExpiresAt    pgtype.Timestamptz
	ParentId     pgtype.UUID
}

type SessionSyncCheckpoint struct {
	SessionId pgtype.UUID
	Type      string
	CreatedAt pgtype.Timestamptz
	UpdatedAt pgtype.Timestamptz
	Ack       string
	UpdateId  pgtype.UUID
}

type SharedLink struct {
	ID            pgtype.UUID
	Description   pgtype.Text
	UserId        pgtype.UUID
	Key           []byte
	Type          string
	CreatedAt     pgtype.Timestamptz
	ExpiresAt     pgtype.Timestamptz
	AllowUpload   bool
	AlbumId       pgtype.UUID
	AllowDownload bool
	ShowExif      bool
	Password      pgtype.Text
}

type SharedLinkAsset struct {
	AssetsId      pgtype.UUID
	SharedLinksId pgtype.UUID
}

type SmartSearch struct {
	AssetId   pgtype.UUID
	Embedding interface{}
}

type SystemMetadatum struct {
	Key   string
	Value []byte
}

type Tag struct {
	ID        pgtype.UUID
	UserId    pgtype.UUID
	Value     string
	CreatedAt pgtype.Timestamptz
	UpdatedAt pgtype.Timestamptz
	Color     pgtype.Text
	ParentId  pgtype.UUID
	UpdateId  pgtype.UUID
}

type TagAsset struct {
	AssetsId pgtype.UUID
	TagsId   pgtype.UUID
}

type TagsClosure struct {
	IDAncestor   pgtype.UUID
	IDDescendant pgtype.UUID
}

type User struct {
	ID                   pgtype.UUID
	Email                string
	Password             string
	CreatedAt            pgtype.Timestamptz
	ProfileImagePath     string
	IsAdmin              bool
	ShouldChangePassword bool
	DeletedAt            pgtype.Timestamptz
	OauthId              string
	UpdatedAt            pgtype.Timestamptz
	StorageLabel         pgtype.Text
	Name                 string
	QuotaSizeInBytes     pgtype.Int8
	QuotaUsageInBytes    int64
	Status               string
	ProfileChangedAt     pgtype.Timestamptz
	UpdateId             pgtype.UUID
	AvatarColor          pgtype.Text
	PinCode              pgtype.Text
}

type UserMetadatum struct {
	UserId pgtype.UUID
	Key    string
	Value  []byte
}

type UsersAudit struct {
	UserId    pgtype.UUID
	DeletedAt pgtype.Timestamptz
	ID        pgtype.UUID
}

type VersionHistory struct {
	ID        pgtype.UUID
	CreatedAt pgtype.Timestamptz
	Version   string
}
